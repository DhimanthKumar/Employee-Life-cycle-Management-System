name: Django + Postman API Tests on Windows

on: [push, pull_request]

jobs:
  test-on-windows:
    runs-on: windows-latest
    environment: EMFS  # Access environment-scoped secrets

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Python and Pipenv
      run: |
        pip install pipenv
        cd backend
        pipenv install

    - name: Run Django migrations
      run: |
        cd backend
        pipenv run python manage.py migrate --settings=backend.test_settings

    - name: Start Django server in background
      shell: powershell
      run: |
        cd backend
        Start-Process -NoNewWindow -FilePath "pipenv" `
          -ArgumentList "run", "python", "manage.py", "runserver", "127.0.0.1:8000", "--settings=backend.test_settings"

    - name: Wait for server to start
      shell: powershell
      run: |
        $retries = 30
        for ($i = 0; $i -lt $retries; $i++) {
          try {
            $res = Invoke-WebRequest -Uri http://127.0.0.1:8000 -UseBasicParsing -TimeoutSec 1
            if ($res.StatusCode -eq 200) {
              Write-Host "✅ Django server is up!"
              break
            }
          } catch {
            Start-Sleep -Seconds 2
          }

          if ($i -eq ($retries - 1)) {
            Write-Error "❌ Server did not start in time"
            exit 1
          }
        }



    - name: Decode Postman environment JSON from base64
      shell: powershell
      run: |
        $decoded = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String("${{ secrets.POSTMAN_ENV_BASE64 }}"))
        Set-Content -Path backend\local_env.json -Value $decoded

    - name: Install Newman
      run: npm install -g newman

    - name: Run Postman tests
      run: newman run backend/EMFStest.json -e backend/local_env.json
